library(logReg)
devtools::check(logReg)
devtools::check("logReg")
library(logReg)
?gradDesc
?gradDesc
?logMod
R CMD check
options(devtools.desc.suggests = "knitr, rmardown")
create.post()
library(logReg)
library(logReg)
library(logReg)
library(logReg)
set.seed(1)
> x1 <- rnorm(100, mean = 10);
> x2 <- rnorm(100, mean = 10);
> someVariable <- x1 - x2
> x <- cbind(x1, x2)
> y <- rbinom(100, 1, exp(someVariable) / (1 + exp(someVariable)))
> fit <- logMod(y ~ x)
set.seed(1)
x1 <- rnorm(100, mean = 10);
x2 <- rnorm(100, mean = 10);
someVariable <- x1 - x2
x <- cbind(x1, x2)
y <- rbinom(100, 1, exp(someVariable) / (1 + exp(someVariable)))
fit <- logMod(y ~ x)
x
y
someVariable
set.seed(1)
x1 <- rnorm(100, mean = 10);
x2 <- rnorm(100, mean = 10);
someModel <- x1 - x2
x <- cbind(x1, x2)
y <- rbinom(100, 1, exp(someModel) / (1 + exp(someModel)))
fit <- logMod(y ~ x)
# Titanic data
# Loading libraries
library(dplyr)
# Loading test data
testData <- read.csv("C:/Users/hammt/Desktop/R",
head = T, sep = ",", dec = ",")
# View(testData)
################################################################################
# Manipulation of test data
# Select variables for testing
str(testData)
testData <- testData %>% select(Survived, Pclass, Sex)
# View(testData)
# Define regressors
testData$Pclass <- as.numeric(testData$Pclass)
testData$Sex <- as.numeric(as.factor(testData$Sex))
regressors <- testData %>% select(Pclass, Sex)
# regressors <- as.matrix(regressors)
# Define dependent variable
depVar <- testData %>% select(Survived)
depVar <- as.matrix(depVar)
# Some Test Data
someNumber <- nrow(depVar)
set.seed(42)
someX0 <- c(rep(1, times = nrow(depVar)))
someX1 <- rnorm(someNumber)
someX2 <- rnorm(someNumber)
X <- matrix(c(someX0, someX1, someX2), ncol = 3)
xGLM <- matrix(c(someX1, someX2), ncol = 2)
?qqnorm
?lowess
?printCoefmat
# Titanic data
# Loading libraries
library(dplyr)
# Loading test data
testData <- read.csv("C:/Users/hammt/Desktop/R/titanic_data.R",
head = T, sep = ",", dec = ",")
# View(testData)
################################################################################
# Manipulation of test data
# Select variables for testing
str(testData)
testData <- testData %>% select(Survived, Pclass, Sex)
# View(testData)
# Define regressors
testData$Pclass <- as.numeric(testData$Pclass)
testData$Sex <- as.numeric(as.factor(testData$Sex))
regressors <- testData %>% select(Pclass, Sex)
# regressors <- as.matrix(regressors)
# Define dependent variable
depVar <- testData %>% select(Survived)
depVar <- as.matrix(depVar)
# Some Test Data
someNumber <- nrow(depVar)
set.seed(42)
someX0 <- c(rep(1, times = nrow(depVar)))
someX1 <- rnorm(someNumber)
someX2 <- rnorm(someNumber)
X <- matrix(c(someX0, someX1, someX2), ncol = 3)
xGLM <- matrix(c(someX1, someX2), ncol = 2)
# Loading test data
testData <- read.csv2("C:/Users/hammt/Desktop/R/titanic_data.R",
head = T, sep = ",", dec = ",")
library(logReg)
fit <- logMod(y ~ x)
set.seed(1)
x1 <- rnorm(100, mean = 10);
x2 <- rnorm(100, mean = 10);
someVariable <- x1 - x2
x <- cbind(x1, x2)
y <- rbinom(100, 1, exp(someVariable) / (1 + exp(someVariable)))
fit <- logMod(y ~ x)
summary(fit)
logMod(y ~ x)
library(logReg)
summary(fit)
?print.aov
?print.data.frame
library(logReg)
summary(fit)
glm(y ~ x)
glm(y ~ x, family = binomial)
glmObj <- glm(y ~ x, family = binomial)
summary(glmObj)
library(logReg)
library(logReg)
library(logReg)
library(logReg)
library(logReg)
plot(fit)
fit <- logMod(x ~ y)
set.seed(1)
x1 <- rnorm(100, mean = 10);
x2 <- rnorm(100, mean = 10);
someVariable <- x1 - x2
x <- cbind(x1, x2)
y <- rbinom(100, 1, exp(someVariable) / (1 + exp(someVariable)))
fit <- logMod(y ~ x)
set.seed(1)
x1 <- rnorm(100, mean = 10);
x2 <- rnorm(100, mean = 10);
someVariable <- x1 - x2
x <- cbind(x1, x2)
y <- rbinom(100, 1, exp(someVariable) / (1 + exp(someVariable)))
fit <- logMod(y ~ x)
gradDesc(x, y)
logMod(y ~ x)
library(logReg)
logMod(y ~ x)
library(logReg)
logMod(y ~ x)
library(logReg)
logMod(y ~ x)
library(logReg)
logMod(y ~ x)
library(logReg)
logMod(y ~ x)
source('~/logReg/R/5_logMod_S3.R')
library(logReg)
library(logReg)
logMod(y ~ x)
logMod(y ~ x)
library(logReg)
library(logReg)
logMod(y ~ x)
library(logReg)
logMod(y ~ x)
library(logReg)
logMod(y ~ x)
library(logReg)
set.seed(1)
x1 <- rnorm(100, mean = 10);
x2 <- rnorm(100, mean = 10);
someVariable <- x1 - x2
x <- cbind(x1, x2)
y <- rbinom(100, 1, exp(someVariable) / (1 + exp(someVariable)))
fit <- logMod(y ~ x)
fit
library(logReg)
set.seed(1)
x1 <- rnorm(100, mean = 10);
x2 <- rnorm(100, mean = 10);
someVariable <- x1 - x2
x <- cbind(x1, x2)
y <- rbinom(100, 1, exp(someVariable) / (1 + exp(someVariable)))
fit <- logMod(y ~ x)
fit
library(logReg)
set.seed(1)
x1 <- rnorm(100, mean = 10);
x2 <- rnorm(100, mean = 10);
someVariable <- x1 - x2
x <- cbind(x1, x2)
y <- rbinom(100, 1, exp(someVariable) / (1 + exp(someVariable)))
fit <- logMod(y ~ x)
fit
a <- c(1, 3, 4)
a
a <- as.numeric(a)
a
a
as.matrix(a)
library(logReg)
set.seed(1)
x1 <- rnorm(100, mean = 10);
x2 <- rnorm(100, mean = 10);
someVariable <- x1 - x2
x <- cbind(x1, x2)
y <- rbinom(100, 1, exp(someVariable) / (1 + exp(someVariable)))
fit <- logMod(y ~ x)
fit
source('~/logReg/R/5_logMod_S3.R')
devtools::use_vignette("my-vignette")
?glm
source('~/.active-rstudio-document', echo=TRUE)
set.seed(1)
x1 <- rnorm(100, mean = 10);
x2 <- rnorm(100, mean = 10);
someVariable <- x1 - x2
x <- cbind(x1, x2)
y <- rbinom(100, 1, exp(someVariable) / (1 + exp(someVariable)))
fit <- logMod(y ~ x)
library(logReg)
set.seed(1)
x1 <- rnorm(100, mean = 10);
x2 <- rnorm(100, mean = 10);
someVariable <- x1 - x2
x <- cbind(x1, x2)
y <- rbinom(100, 1, exp(someVariable) / (1 + exp(someVariable)))
fit <- logMod(y ~ x)
fit
summary(fit)
library(logReg)
library(logReg)
logMod(y ~ x)
library(logReg)
logMod(y ~ x)
library(logReg)
set.seed(1)
x1 <- rnorm(100, mean = 10);
x2 <- rnorm(100, mean = 10);
someVariable <- x1 - x2
x <- cbind(x1, x2)
y <- rbinom(100, 1, exp(someVariable) / (1 + exp(someVariable)))
fit <- logMod(y ~ x)
fit
a <- rnorm(10)
a
a <- 1
class(a)
# Loading libraries
library(dplyr)
# Loading test data
testData <- read.csv2("C:/Users/hammt/Desktop/R/titanic_data.R",
head = T, sep = ",", dec = ",")
# View(testData)
################################################################################
# Manipulation of test data
# Select variables for testing
str(testData)
testData <- testData %>% select(Survived, Pclass, Sex)
# Loading test data
testData <- read.csv2("C:/Users/hammt/Desktop/R/titanic_data.R",
head = T, sep = ",", dec = ",")
testData <- read.csv2("C:/Users/hammt/Desktop/R/titanic_data.R",
head = T, sep = ",", dec = ".")
testData <- read.csv2("C:/Users/hammt/Desktop/R/titanic_data.R",
head = T, sep = ",", dec = ".")
testData <- read.csv("C:/Users/hammt/Desktop/R/titanic_data.R",
head = T, sep = ",", dec = ".")
load("C:/Users/hammt/Downloads/titanic_train.rda")
titanicData <- load("C:/Users/hammt/Downloads/titanic_train.rda")
View(titanic_train)
View(titanic_train)
titanic_train
save(titanic_train)
save(titanic_train.rda)
write.csv(file= titanic_train.rda)
testData <- read.csv2("C:/Users/hammt/Desktop/R/titanic_data.R",
head = T, sep = ",", dec = ".")
# Loading test data
testData <- read.csv2("C:/Users/hammt/Desktop/R/titanic_data.R",
header = T, sep = ",", dec = ".")
testData <- read.csv2("C:/Users/hammt/Desktop/R/titanic_data.R",
header = T, sep = ",")
titanicData <- read.csv2("C:/Users/hammt/Desktop/R/titanic_data.R",
header = T, sep = ",", dec = ".")
titanicData <- read.csv2("C:/Users/hammt/Desktop/R/titanic_data.R",
header = T, sep = ",", dec = ".", row.names = NULL)
View(titanicData)
View(titanicData)
library(titanic)
install.packages(titanic)
install.packages("titanic")
library(titanic)
?titanic
titanic_train
titanicData <- titanic::titanic_train
titanicData <- titanicDataData %>% select(Survived, Pclass, Sex)
titanicData <- titanicData %>% select(Survived, Pclass, Sex)
as_tibble(titanicData)
library(logReg)
logMod(Survived ~ Pclass + Sex)
logMod(Survived ~ Pclass + Sex, data = titanicData)
glm(Survived ~ Pclass + Sex, data = titanicData)
glm(Survived ~ Pclass + Sex, data = titanicData, family = binomial)
save(titanicData, file = "titanicData.RData")
library(logReg)
load("~/logReg/data/titanicData.RData")
devtools::use_data(titanicData)
?titanic
library(logReg)
str(titanicData$Survived)
str(titanicData)
library(logReg)
titanicData
library(knitr)
#knitr::opts_chunk$set(echo = TRUE)
library(logMod)
library(logReg)
logMod(Survived ~ Pclass + Sex, data = titanicData)
fit <- logMod(Survived ~ Pclass + Sex, data = titanicData)
print(fit)
summary(fit)
plot(fit)
?plot.matrix
# Estimate model with logMod() function
logMod(Survived ~ Pclass + Sex, data = titanicData)
library(logReg)
# Estimate model with logMod() function
logMod(Survived ~ Pclass + Sex, data = titanicData)
# Estimate model with logMod() function
fit <- logMod(Survived ~ Pclass + Sex, data = titanicData)
fittedProb <- fit$pi
y_hat <- ifelse(fittedProb > 0.5, 1, 0)
# Definie classification matrix
classMat <- table(y_hat)
classMat
# Probability of correct classification
sum(diag(classMat))/sum(classMat)
y_hat <- ifelse(fittedProb > 0.5, 1, 0)
# Definie classification matrix
classMat <- table(y_hat, titanicData$Survived)
classMat
# Probability of correct classification
sum(diag(classMat))/sum(classMat)
fit$model
fit$model[,1]
class(fit$model[,1])
y_hat <- ifelse(fittedProb > 0.5, 1, 0)
# Definie classification matrix
classMat <- table(y_hat,  fit$model[,1])
classMat
# Probability of correct classification
sum(diag(classMat))/sum(classMat)
library(logReg)
plot(fit)
library(logReg)
plot(fit)
fitGLM <- glm(Survived ~ PClass + Sex, data = titanicData)
fitGLM <- glm(Survived ~ Pclass + Sex, data = titanicData)
plot(fitGLM)
plot(fit)
a <- plot(fit)
print(a)
plot(classMat)
a <- plot(classMat)
plot1 <- list(a)
print(plot1)
devtools::load_all(".")
?knitr
library(logReg)
?print
?summary
?plot
stats::print.glm
stats::glm.fit()
stats::summary.glm()
?library
library(titanic)
?titanic
library(knitr)
#knitr::opts_chunk$set(echo = TRUE)
fit <- logMod(Survived ~ Pclass + Sex, data = titanicData)
fit
summary(fit)
library(logReg)
library(logReg)
library(knitr)
#knitr::opts_chunk$set(echo = TRUE)
fit <- logMod(Survived ~ Pclass + Sex, data = titanicData)
plot(fit)
library(logReg)
?plot
library(logReg)
library(logReg)
?library
?model.frame
?quantile
?lowess
?plots
?plot
library(logReg)
library(logReg)
library(logReg)
?summary
library(logReg)
?summary
?fishScore()
?rbinom
?cbind
?set.seed
set.seed(1)
x1 <- rnorm(100, mean = 10);
x2 <- rnorm(100, mean = 10);
someVariable <- x1 - x2
x <- cbind(x1, x2)
y <- rbinom(100, 1, exp(someVariable) / (1 + exp(someVariable)))
fit <- logMod(y ~ x)
?col2rgb
data("titanicData")
library(logReg)
?summary
?summary.default
?plot
?print
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
library(logReg)
set.seed(1)
x1 <- rnorm(100, mean = 10);
x2 <- rnorm(100, mean = 10);
someVariable <- x1 - x2
x <- cbind(x1, x2)
y <- rbinom(100, 1, exp(someVariable) / (1 + exp(someVariable)))
fit <- logMod(y ~ x)
library(logReg)
set.seed(1)
x1 <- rnorm(100, mean = 10);
x2 <- rnorm(100, mean = 10);
someVariable <- x1 - x2
x <- cbind(x1, x2)
y <- rbinom(100, 1, exp(someVariable) / (1 + exp(someVariable)))
fit <- logMod(y ~ x)
fit
library(logReg)
?NextMethod
titanicData
set.seed(1)
x1 <- rnorm(100, mean = 10);
x2 <- rnorm(100, mean = 10);
x0 <- c(rep(1, times = 100));
someVariable <- x1 - x2
x <- cbind(x0, x1, x2)
y <- rbinom(100, 1, exp(someVariable) / (1 + exp(someVariable)))
fit <- fishScore(x = x, y = y)
library(logReg)
set.seed(1)
x1 <- rnorm(100, mean = 10);
x2 <- rnorm(100, mean = 10);
x0 <- c(rep(1, times = 100));
someVariable <- x1 - x2
x <- cbind(x0, x1, x2)
y <- rbinom(100, 1, exp(someVariable) / (1 + exp(someVariable)))
fit <- fishScore(x = x, y = y)
library(logReg)
730 * 2.8
2044/365
